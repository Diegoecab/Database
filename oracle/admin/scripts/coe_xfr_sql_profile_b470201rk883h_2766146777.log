SQL> REM
SQL> REM $Header: 215187.1 coe_xfr_sql_profile_b470201rk883h_2766146777.sql 11.4.1.4 2021/09/28 csierra $
SQL> REM
SQL> REM Copyright (c) 2000-2010, Oracle Corporation. All rights reserved.
SQL> REM
SQL> REM AUTHOR
SQL> REM   carlos.sierra@oracle.com
SQL> REM
SQL> REM SCRIPT
SQL> REM   coe_xfr_sql_profile_b470201rk883h_2766146777.sql
SQL> REM
SQL> REM DESCRIPTION
SQL> REM   This script is generated by coe_xfr_sql_profile.sql
SQL> REM   It contains the SQL*Plus commands to create a custom
SQL> REM   SQL Profile for SQL_ID b470201rk883h based on plan hash
SQL> REM   value 2766146777.
SQL> REM   The custom SQL Profile to be created by this script
SQL> REM   will affect plans for SQL commands with signature
SQL> REM   matching the one for SQL Text below.
SQL> REM   Review SQL Text and adjust accordingly.
SQL> REM
SQL> REM PARAMETERS
SQL> REM   None.
SQL> REM
SQL> REM EXAMPLE
SQL> REM   SQL> START coe_xfr_sql_profile_b470201rk883h_2766146777.sql;
SQL> REM
SQL> REM NOTES
SQL> REM   1. Should be run as SYSTEM or SYSDBA.
SQL> REM   2. User must have CREATE ANY SQL PROFILE privilege.
SQL> REM   3. SOURCE and TARGET systems can be the same or similar.
SQL> REM   4. To drop this custom SQL Profile after it has been created:
SQL> REM      EXEC DBMS_SQLTUNE.DROP_SQL_PROFILE('coe_b470201rk883h_2766146777');
SQL> REM   5. Be aware that using DBMS_SQLTUNE requires a license
SQL> REM      for the Oracle Tuning Pack.
SQL> REM
SQL> WHENEVER SQLERROR EXIT SQL.SQLCODE;
SQL> REM
SQL> VAR signature NUMBER;
SQL> REM
SQL> DECLARE
  2  sql_txt CLOB;
  3  h	     SYS.SQLPROF_ATTR;
  4  BEGIN
  5  sql_txt := q'[
  6  SELECT NVL(SUM(D.REAL), 0) AS REAL_PONDERADO ,NVL(SUM(D.VALOR), 0) AS REAL_VALOR ,SUM(CASE WHEN D.PRORRATEO = 'S' THEN NVL(D.REAL, 0) ELSE 0 END) AS REAL_SUMA ,SUM(CASE WHEN D.PRORRATEO = 'N' THEN NVL(D.REAL, 0) ELSE 0 END) AS REAL_PROPIO FROM OFSA40.TPVI_DETALLE D WHERE D.INDICADOR = :B4 AND D.TIPO_PREMIO = :B3 AND D.MES BETWEEN :B2 AND :B1 AND EXISTS (SELECT 1 FROM OFSA40.PEA_SUC_REGION SR WHERE SR.SUC = D.SUCURSAL) AND EXISTS (SELECT 1 FROM OFSA40.PEA_PV04_DATOS PV WHERE PV.MES = TRUNC(:B1 , 'MM') AND PV.INDIC = :B4 AND PV.FINAL = :B5 AND PV.SUC = D.SUCURSAL)
  7  ]';
  8  h := SYS.SQLPROF_ATTR(
  9  q'[BEGIN_OUTLINE_DATA]',
 10  q'[BATCH_TABLE_ACCESS_BY_ROWID(@"SEL$CC7EC59E" "PV"@"SEL$3")]',
 11  q'[INDEX_RS_ASC(@"SEL$CC7EC59E" "PV"@"SEL$3" ("PEA_PV04_DATOS"."MES" "PEA_PV04_DATOS"."INDIC" "PEA_PV04_DATOS"."SUC"))]',
 12  q'[USE_NL(@"SEL$CC7EC59E" "PV"@"SEL$3")]',
 13  q'[INDEX_SS(@"SEL$CC7EC59E" "SR"@"SEL$2" ("PEA_SUC_REGION"."REGION" "PEA_SUC_REGION"."SUC"))]',
 14  q'[USE_NL(@"SEL$CC7EC59E" "SR"@"SEL$2")]',
 15  q'[IGNORE_OPTIM_EMBEDDED_HINTS]',
 16  q'[OPTIMIZER_FEATURES_ENABLE('12.1.0.2')]',
 17  q'[DB_VERSION('12.1.0.2')]',
 18  q'[OPT_PARAM('_connect_by_use_union_all' 'false')]',
 19  q'[ALL_ROWS]',
 20  q'[OUTLINE_LEAF(@"SEL$CC7EC59E")]',
 21  q'[UNNEST(@"SEL$3")]',
 22  q'[UNNEST(@"SEL$2")]',
 23  q'[OUTLINE(@"SEL$1")]',
 24  q'[OUTLINE(@"SEL$3")]',
 25  q'[OUTLINE(@"SEL$2")]',
 26  q'[INDEX_RS_ASC(@"SEL$CC7EC59E" "D"@"SEL$1" ("TPVI_DETALLE"."INDICADOR" "TPVI_DETALLE"."TIPO_PREMIO" "TPVI_DETALLE"."MES"))]',
 27  q'[BATCH_TABLE_ACCESS_BY_ROWID(@"SEL$CC7EC59E" "D"@"SEL$1")]',
 28  q'[LEADING(@"SEL$CC7EC59E" "D"@"SEL$1" "SR"@"SEL$2" "PV"@"SEL$3")]',
 29  q'[END_OUTLINE_DATA]');
 30  :signature := DBMS_SQLTUNE.SQLTEXT_TO_SIGNATURE(sql_txt);
 31  DBMS_SQLTUNE.IMPORT_SQL_PROFILE (
 32  sql_text	 => sql_txt,
 33  profile	 => h,
 34  name	 => 'coe_b470201rk883h_2766146777',
 35  description => 'coe b470201rk883h 2766146777 '||:signature||'',
 36  category	 => 'DEFAULT',
 37  validate	 => TRUE,
 38  replace	 => TRUE,
 39  force_match => TRUE);
 40  END;
 41  /

PL/SQL procedure successfully completed.

SQL> WHENEVER SQLERROR CONTINUE
SQL> SET ECHO OFF;

            SIGNATURE
---------------------
  6788355560112920196


... manual custom SQL Profile has been created

